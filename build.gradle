plugins {
    id 'java'
    id 'jacoco'
    id 'org.springframework.boot' version '3.2.5'
    id 'io.spring.dependency-management' version '1.1.5'
}

group = 'ru.panyukovnn'
version = '1.0.0-RC1'

java.targetCompatibility = JavaVersion.VERSION_17
java.sourceCompatibility = JavaVersion.VERSION_17

repositories {
    mavenCentral()
    maven { url 'https://repo.spring.io/milestone' }
    maven { url 'https://repo.spring.io/snapshot' }
    maven {
        name = 'Central Portal Snapshots'
        url = 'https://central.sonatype.com/repository/maven-snapshots/'
    }
    maven {
        url = uri("https://maven.pkg.github.com/PanyukovNN/reference-logging-starter")
        credentials {
            username = 'PanyukovNN'
            password = githubPackagesReadToken
        }
    }
}

dependencyManagement {
    imports {
        mavenBom "org.springframework.cloud:spring-cloud-dependencies:2023.0.2"
    }
}

dependencies {
    implementation 'org.springframework.boot:spring-boot-starter-webflux'
    implementation "org.springframework.boot:spring-boot-starter-data-jpa"
    implementation "org.springframework.boot:spring-boot-starter-actuator"
    implementation "org.springframework.boot:spring-boot-starter-validation"
    implementation "org.springframework.boot:spring-boot-starter-data-rest"

    implementation "org.springframework.cloud:spring-cloud-starter-openfeign"

    implementation 'com.github.pengrad:java-telegram-bot-api:8.3.0'

    implementation platform("org.springframework.ai:spring-ai-bom:1.0.0-SNAPSHOT")
    implementation 'org.springframework.ai:spring-ai-starter-model-openai'

    implementation 'ru.panyukovnn:reference-logging-starter:1.0.0-RC2'

    implementation "org.liquibase:liquibase-core"
    implementation "org.postgresql:postgresql:42.7.4"

    implementation "org.jsoup:jsoup:1.20.1"

    implementation "net.logstash.logback:logstash-logback-encoder:7.3"
    implementation "org.codehaus.janino:janino:3.1.9"

    compileOnly 'org.projectlombok:lombok'
    annotationProcessor 'org.projectlombok:lombok'
    testCompileOnly 'org.projectlombok:lombok'
    testAnnotationProcessor 'org.projectlombok:lombok'

    testImplementation "com.h2database:h2"
    testImplementation "org.springframework.boot:spring-boot-starter-test"
    testImplementation "org.springframework.cloud:spring-cloud-starter-contract-stub-runner"
}

test {
    useJUnitPlatform()
}

jacocoTestReport {
    afterEvaluate {
        classDirectories.setFrom(files(classDirectories.files.collect {
            fileTree(dir: it, exclude: [
                    "**/config/*",
                    "**/dto/*",
                    "**/model/*",
                    "**/property/*",
                    "**/exception/*"
            ])
        }))
    }
}

jacocoTestCoverageVerification {
    violationRules {
        rule {
            limit {
                minimum = 0.40
            }
        }
    }
}

bootJar {
    archiveFileName = "content-conveyor.jar"
}

tasks.withType(Test) {
    systemProperty "file.encoding", "UTF-8"
}

jar {
    enabled = false
}